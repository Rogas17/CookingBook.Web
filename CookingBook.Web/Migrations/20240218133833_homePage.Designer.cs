// <auto-generated />
using System;
using CookingBook.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingBook.Web.Migrations
{
    [DbContext(typeof(BlogDB))]
    [Migration("20240218133833_homePage")]
    partial class homePage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("CookingBook.Web.Models.Domena.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPublikacji")
                        .HasColumnType("TEXT");

                    b.Property<string>("KrótkiOpis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nagłówek")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Treść")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TytułStrony")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlZdjęcia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Widoczność")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Posty");
                });

            modelBuilder.Entity("CookingBook.Web.Models.Domena.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WyświetlanaNazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tagi");
                });

            modelBuilder.Entity("BlogPostTag", b =>
                {
                    b.Property<Guid>("PostyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagiId")
                        .HasColumnType("TEXT");

                    b.HasKey("PostyId", "TagiId");

                    b.HasIndex("TagiId");

                    b.ToTable("BlogPostTag");
                });

            modelBuilder.Entity("BlogPostTag", b =>
                {
                    b.HasOne("CookingBook.Web.Models.Domena.BlogPost", null)
                        .WithMany()
                        .HasForeignKey("PostyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookingBook.Web.Models.Domena.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
